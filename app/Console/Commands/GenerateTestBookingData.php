<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Actions\GenerateTestDataAction;

class GenerateTestBookingData extends Command
{
    protected $signature = 'booking:generate-test-data {--company-id=}';
    protected $description = 'Generate test data for booking system using Artisan commands';

    public function handle(GenerateTestDataAction $generateTestDataAction): void
    {
        $companyId = $this->option('company-id') ?? 1;

        $this->info("üè¢ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏ {$companyId}...");
        $this->info("üìã –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ä–µ–∞–ª—å–Ω—ã–µ Artisan –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π");

        $result = $generateTestDataAction->execute($companyId);

        $this->info("üéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!");

        // –í—ã–≤–æ–¥–∏–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        $this->info("\nüìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:");
        $this->info("   - –ö–æ–º–ø–∞–Ω–∏—è: {$result['company']->name} (ID: {$result['company']->id})");

        $this->info("   - –†–∞—Å–ø–∏—Å–∞–Ω–∏—è:");
        $this->info("     ‚Ä¢ –°—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ: {$result['timetable_info']['static']['working_days']} —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π, {$result['timetable_info']['static']['total_breaks']} –ø–µ—Ä–µ—Ä—ã–≤–æ–≤");
        $this->info("     ‚Ä¢ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ: {$result['timetable_info']['dynamic']['working_days']} —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π, {$result['timetable_info']['dynamic']['total_breaks']} –ø–µ—Ä–µ—Ä—ã–≤–æ–≤");

        $this->info("   - –¢–∏–ø—ã —Ä–µ—Å—É—Ä—Å–æ–≤: " . count($result['resource_types']));
        foreach ($result['resource_types'] as $type => $resourceType) {
            $this->info("     ‚Ä¢ {$resourceType->name}: {$resourceType->description}");
        }

        $resourcesByType = [];
        foreach ($result['resources'] as $resource) {
            $typeName = $resource->resourceType->name;
            $resourcesByType[$typeName] = ($resourcesByType[$typeName] ?? 0) + 1;
        }

        $this->info("   - –†–µ—Å—É—Ä—Å—ã: " . count($result['resources']));
        foreach ($resourcesByType as $typeName => $count) {
            $this->info("     ‚Ä¢ {$typeName}: {$count} —à—Ç.");
        }

        $this->info("   - –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: " . count($result['bookings']));

        $bookingsByStatus = [];
        foreach ($result['bookings'] as $booking) {
            $bookingsByStatus[$booking->status] = ($bookingsByStatus[$booking->status] ?? 0) + 1;
        }

        foreach ($bookingsByStatus as $status => $count) {
            $this->info("     ‚Ä¢ {$status}: {$count} —à—Ç.");
        }

        $this->info("\nüöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!");
        $this->info("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: php artisan serve");
        $this->info("üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –≤ Postman –∫–æ–ª–ª–µ–∫—Ü–∏–∏: storage/app/exports/booking_system_postman_collection.json");
    }
}
